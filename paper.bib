@article{Filazzola:2022,
	title = {A call for clean code to effectively communicate science},
	volume = {13},
	url = {https://besjournals.onlinelibrary.wiley.com/doi/abs/10.1111/2041-210X.13961},
	doi = {https://doi.org/10.1111/2041-210X.13961},
	abstract = {Abstract Effective coding is fundamental to the study of biology. Computation underpins most research, and reproducible science can be promoted through clean coding practices. Clean coding is crafting code design, syntax and nomenclature in a manner that maximizes the potential to communicate its intent with other scientists. However, computational biologists are not software engineers, and many of our coding practices have developed ad hoc without formal training, often creating difficult-to-read code for others. Hard-to-understand code can thus be limiting our efficiency and ability to communicate as scientists with one another. The purpose of this paper is to provide a primer on some of the practices associated with crafting clean code by synthesizing a transformative text in software engineering along with recent articles on coding practices in computational biology. We review past recommendations to provide a series of best practices that transform coding into a human-accessible form of communication. Three common themes shared in this synthesis are the following: (a) code has value and you are responsible for its organization to enable clear communication, (b) use a formatting style to guide writing code that is easily understandable and consistent and (c) apply abstraction to emphasize important elements and declutter. While many of the provided practices and recommendations were developed with computational biologists in mind, we believe there is wider applicability to any biologist undertaking work in data management or statistical analyses. Clean code is thus a crucial step forward in resolving some of the crisis in reproducibility for science.},
	number = {10},
	journal = {Methods in Ecology and Evolution},
	author = {Filazzola, Alessandro and Lortie, CJ},
	year = {2022},
	note = {\_eprint: https://besjournals.onlinelibrary.wiley.com/doi/pdf/10.1111/2041-210X.13961},
	keywords = {open science, principles, programming, replication, reproducibility, science communication, transparency},
	pages = {2119--2128},
}

@misc{Wilson:2021,
	title = {Task {Interruption} in {Software} {Development} {Projects}},
	url = {https://neverworkintheory.org/2021/08/09/task-interruption-in-software-development-projects.html},
	urldate = {2025-05-04},
	journal = {It Will Never Work in Theory},
	author = {Wilson, Greg},
	month = aug,
	year = {2021},
}
